################################
# Spontaneous local environment
################################

# SPONTANEOUS-RUNNING
spontaneous.version=1.0.0

########
# Hint: if you change the api/app versions here, you have to change the ClientTestConfiguration too
########
spontaneous.client.apiVersion=0.0.1

# valid api/app/appKeys versions as comma separated values: 1.0,2.0
spontaneous.client.validApiVersions=0.0.1,0.0.2,1.0.0

spontaneous.client.android.validAppVersions=0,1,2
spontaneous.client.android.recommendedAppVersion=0.0.1
spontaneous.client.android.validAppKeys=b1b8af6f-bafa-47ba-bf4a-cde83517934b

#TOMCAT
server.port=8088
tomcat.ajp.port=8009
tomcat.ajp.remoteauthentication=false
tomcat.ajp.enabled=true

# DATASOURCE
# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/spontaneous-test
spring.datasource.username = spontaneous
spring.datasource.password = spontaneous_0807

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

# SECURITY
security.basic.enabled=false
security.user.name=user
security.user.password=password

# OAUTH
oauth.resourceId=spontaneous/secure
oauth.clientId=spontaneous-client
oauth.clientSecret=spontaneous-secret
# token max. 24 h valid
oauth.tokenValiditySeconds=86400
oauth.tokenValidityAfterBusinessHoursMinutes=15


# Business hours
businesshours.begin.hour=6
businesshours.begin.minute=00
businesshours.end.hour=22
businesshours.end.minute=00


